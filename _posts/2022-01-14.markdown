---

layout: single
title:  "web socket이란?"
categories: blog

---

# web socket이란?

[The WebSocke API -> MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API)

## 웹소켓(WebSocket)의 배경

 1. 인터넷이 등장하고 HTTP를 통해서 통신을 할 때는 URL 요청이 유일한 방법이었음. 이 때문에 아이디 중복 확인 및 유효성 검사를 하기 위해서는 새로운 페이지 요청이 들어가게 되었음.
 2. 여기서 발전하기 위해서 Ajax 통신으로 클라이언트에서 XMLHttpRequest 객체를 이용해서 서버에 요청을 보내면 서버가 응답하는 방식이 등장함. -> JavaScript로 기존 DOM을 수정할 수 있게됨.
 3. 그런데 Ajax는 실시간 변화를 주려면 계속 클라이언트가 버튼을 클릭해야 한다던가 어떤 식으로든 요청을 계속 보내야함.
    - 요청을 계속 보냄으로서 발생되는 문제의 예시로 "검색할 때 타이핑이 되면 미리 인식하여 검색하는 방식" 이 것에 대해서도 api에 계속 쿼리를 보내고 요청을 보내는 것은 자원 낭비이므로(구글 지도 API는 유료이므로 돈도 낭비된다.) 이 문제를 해결하기 위해서 `디바운스`나 `쓰로틀`이라는 기술도 있다.
    - [디바운스와 스로들 참고](https://webclub.tistory.com/607)
 4. 이런 실시간 변화를 사용하기 위해서 `WebSocket`이 탄생하게 됨.

-> CERN(스위스 소재의 유럽 입자 물리 연구소 ) 에서 웹과 함께 태동한 HTTP 통신이 단순한 단방향 메세지 전달체 개념을 넘어서서 현실에 밀접하게 다가왔고, 이런 변화가 Ajax 기술을 만들어 내어 화면을 변경해 주어야할 필요가 생김. 그런데 이런 RIA(Rich Internet Application) 기술의 발달에서 사용자와의 쌍방향 소통이 인기를 끌기 시작하였고 그에 필요한 통신 방법이 필요하어 HTML5 표준안의 일부로 웹소켓 API가 등장함.

## 웹소켓(WebSocket)의 개념

 웹 소켓은 Transport protocol의 일종으로 서버와 클라이언트 간의 효율적인 양방향 통신을 실현하기 위한 구조이다. 웹소켓은 단순한 API로 구성되어있으며, 웹소켓을 이용하면 하나의 HTTP 접속으로 양방향 메시지를 자유롭게 주고받을 수 있다.

 이를 통해 웹에서 채팅, 게임, 실시간 주식 차트와 같이 실시간이 요구되는 응용프로그램의 개발을 한층 효과적으로 구현할 수 있게 되었다.

## 웹소켓(WebSocket)의 작동

연결이 정상적으로 이루어진다면 서버와 클라이언트 간에 웹소켓 연결(TCP/IP기반)이 이루어지고 일정 시간이 지나면 HTTP연결은 자동으로 끊어진다.

기본적으로  웹소켓 API는 아주 간단한 기능들만을 제공하기 때문에 대부분의 경우 `SockJS`나 `Socket.IO`(node.js 기반으로 만들어진 기술)같은 오픈 소스 라이브러리를 많이 사용하고 있으며 메시지 포맷 또한 `STOMP`(Simple Text Oriented Message Protocol)같은 프로토콜을 같이 이용한다.



![image](https://user-images.githubusercontent.com/84966961/149526661-3a6842df-8e54-441a-b794-8ceb345a5bff.png)

## 웹소켓(WebSocket)의 한계

1. 브라우저마다 지원하는 웹소켓 버전들이 각각 달라 쌍방 소통이 힘들 수도 있고 오래된 브라우저는 지원을 하지 않는다. 이 때문에 브라우저 상관 없이 JavaScript 기반으로 실시간 웹을 구현할 수 있는 `Socket.IO`가 많이 사용되고 있다.
2. STOMP -> 단순한 문자열들을 주고 받을 뿐 그 이상의 일은 하지 않는다.(근데 다른 일이 더 필요한지 본인은 모르겠다. 현재는 영상, 음성 매체는 스트리밍 서비스가 있듯 각 쓰임에 특화된 것들이 있기에 한계라고 봐야하는지는 모르겠다.)

## 대표적으로 사용하는 곳

1. SNS APP
2. 리그 오브 레전드 같은 멀티 플레이어 게임 서버
3. 위치 기반 APP
4. 증권 거래 정보 사이트
5. 화상 채팅
6. 구글 Doc처럼 공유하여 수정할 수 있는 다양한 Tool -> SaaS 대부분
